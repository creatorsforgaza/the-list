---
title: "The List"
format:
  html:
    logo: "images/cfg-logo.png"
---


## Table

```{r, loadpackes}
#| echo: false
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(googledrive)
library(googlesheets4)
library(rvest)
library(bslib)
library(gt)

library(gtExtras)


```

```{r}

#| echo: false
#| include: false

# for local
# drive_auth(path = ".secrets/client_secret.json")
# gs4_auth(path = ".secrets/client_secret.json")

# for gha
drive_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

gs4_auth(path = Sys.getenv("GOOGLE_AUTHENTICATION_CREDENTIALS"))

ss <- drive_get(id = Sys.getenv("GOOGLE_SHEET_ID") 
                )

sheet_gaza <- read_sheet(ss)

# idea, when you click "find out more, it shows the information about the family on the right side of the dashboar

```

```{r get links1}

#| echo: false
#| include: false

all_gfm_links <- sheet_gaza %>% 
  # removing fund with broken link for now
  janitor::clean_names() %>% 
  dplyr::filter(person_family != "Jenna/Hashem",
                status != "CLOSED / NOT ACCEPTING DONATIONS") %>%   
  dplyr::select(links) %>% 
  dplyr::filter(str_detect(links, "gofund"))


test_tib <- tibble(
  # campaign_title = NULL,
                   link = NULL,
                   money_raised = NULL,
                   total_goal_amount = NULL,
                   total_num_donations = NULL,
                   total_num_donations_24_hours = NULL,
                   money_raised_24_hours = NULL,
                   total_num_donations_last_20 = NULL,
                   money_raised_last_20 = NULL,
                   num_days_last_20 = NULL)



num_funds <- nrow(all_gfm_links)
```

```{r testing out donations pull}



```


```{r get links2}

#| echo: false
#| include: false

### for last 20 donations
start_word <- '\\,\\\\\"donations\\\\\"\\:\\['
end_word <- 'suggested_donation_stats'

for(i in 1:5){

  read_html_func <- read_html(as.character(all_gfm_links[i,1]))

  link <- as.character(all_gfm_links[i,1])

  test_tib[i, "link"] = link

  # test_tib[i, "campaign_title"] = read_html_func %>%
  #   html_elements(css = ".p-campaign-header") %>%
  #   html_text()

  mr_td =  read_html_func %>%
    html_elements(css = ".hrt-disp-inline") %>%
    html_text()

  test_tib[i, "money_raised"] = mr_td[1]

  test_tib[i, "total_num_donations"] = stringr::str_sub(mr_td[2], start = 2L, end = -2L)

  total_goal = read_html_func %>%
    html_elements(css = ".hrt-text-body-sm") %>%
    html_text()

  test_tib[i, "total_goal_amount"] = readr::parse_number(total_goal[1])

  ### 20 most recent donations
  most_recent_donations = read_html_func %>%
    html_text() %>%
    enframe() %>%
    dplyr::mutate(result =
                    str_match_all(value,
                                  paste0("(?s)",
                                         start_word,
                                         "(.*?)",
                                         end_word))) %>%
    dplyr::select(result) %>%
    unlist()   

  twenty_most_recent_donations = most_recent_donations[[2]][1] %>% 
    tibble::enframe() %>%
    tidyr::separate_longer_delim(value, delim = "donation_id") %>%
    dplyr::filter(row_number() != 1) %>%
    tidyr::separate(value, c("donation_id", "other"), sep = "amount") %>%
    dplyr::mutate(donation_id = readr::parse_number(donation_id)) %>%
    tidyr::separate(other, c("amount", "other"), sep = "is_offline") %>%
    dplyr::mutate(amount = readr::parse_number(amount)) %>%
    tidyr::separate(other, c("name", "other"), sep = "created_at") %>%
    dplyr::select(-name) %>%
    tidyr::separate(other, c("created_at", "other"), sep = "name") %>%
    dplyr::mutate(created_at = readr::parse_datetime(str_sub(
      created_at, start = 6L, end = -12L
    ))) %>%
    tidyr::separate(other, c("name", "other"), sep = "profile_url") %>%
    dplyr::mutate(name = str_sub(name, start = 6L, end = -6L)) %>%
    dplyr::select(-other) 
  
  test_tib[i, "total_num_donations_24_hours"] = twenty_most_recent_donations %>%
    dplyr::filter((now(tzone = "UTC") - hours(5)) - hours(24) <= created_at) %>%
    dplyr::summarise(num_donations = n()) %>% 
    dplyr::pull(num_donations)
  
  test_tib[i, "money_raised_24_hours"] = twenty_most_recent_donations %>%
    dplyr::filter((now(tzone = "UTC") - hours(5)) - hours(24) <= created_at) %>%
    dplyr::summarise(total_donations_amount = sum(amount)) %>% 
    dplyr::pull(total_donations_amount)

# get the spread from the 20 most recent donations
  test_tib[i, "total_num_donations_last_20"] = twenty_most_recent_donations %>%
    dplyr::summarise(
      num_donations = n()
    ) %>% 
    dplyr::pull(num_donations)
  
  test_tib[i, "money_raised_last_20"] = twenty_most_recent_donations %>%
    dplyr::summarise(
      total_donations_amount = sum(amount)
    ) %>% 
    dplyr::pull(total_donations_amount)
    
  test_tib[i, "num_days_last_20"] = twenty_most_recent_donations %>%
    dplyr::summarise(
      most_recent_donation = max(created_at),
      date_of_20th_most_recent_donation = min(created_at)
    ) %>% 
    dplyr::mutate(days = floor(most_recent_donation - 
                                 date_of_20th_most_recent_donation)) %>% 
    dplyr::mutate(days = as.numeric(days)) %>% 
    dplyr::pull(days) 
  
  
}

# total_num_donations_24_hours = NULL,
#                    money_raised_24_hours = NULL,
#                    total_num_donations_last_20 = NULL,
#                    money_raised_last_20 = NULL,
#                    num_days_last_20 = NULL

```

```{r testing currency rates}

# Load necessary librarie




```


```{r cleaning df}

#| echo: false
#| include: false


x <- test_tib

final_table <-  x %>% 
  dplyr::mutate(amount_raised_num = parse_number(money_raised)) %>% 
  dplyr::mutate(currency = str_extract(money_raised, "[€|$|kr|£]")) %>% 
  dplyr::mutate(currency_abv = dplyr::case_when(
    currency == "$" ~ "USD",
    currency == "€" ~ "EUR",
    currency == "£" ~ "GBP",
    currency == "k" ~ "SEK",
    TRUE ~ NA_character_
  )) %>% 
  # dplyr::mutate(amount_raised_in_usd = case_when(
  #   currency == "$" ~ amount_raised_num,
  #   currency == "€" ~ amount_raised_num*1.074,
  #   currency == "£" ~ amount_raised_num*1.271,
  #   currency == "k" ~ amount_raised_num*0.095,
  #   TRUE ~ 9999999999999
  # )) %>% 
  dplyr::mutate(percent_of_goal = amount_raised_num / total_goal_amount) %>% 
  dplyr::left_join(sheet_gaza %>% 
                     dplyr::select(1:2, Status, links),
                   by = c("link" = "links")) %>% 
  dplyr::arrange(desc(Status), percent_of_goal) %>%  
  dplyr::select(link, link_text = `GFM LINK`,
                total_num_donations,currency_abv, amount_raised_num, 
                percent_of_goal, total_num_donations_24_hours:num_days_last_20) %>% 
  dplyr::mutate(link_text = str_wrap(link_text, width = 20)) %>% 
  # dplyr::mutate(donate_now_link = paste0(link, "/donate?source=btn_donate")) %>% 
  dplyr::mutate(row_n = row_number())

# sum_all_donations_in_usd <- final_table %>%
#   summarise(sum(amount_raised_in_usd)) %>%
#   as.numeric() %>%
#   format(big.mark = ",")

```


```{r total donations}
# #| content: valuebox
# #| title: "Total Donations in USD"
# #| 
# list(
#   color= "forestgreen",
#   value = paste0("$", sum_all_donations_in_usd),
#   icon = "cash"
# )
```




```{r final table}


link_text <- final_table %>% 
  dplyr::pull(link_text)


final_table %>% 
  dplyr::select(-c(link_text)) %>% 
  dplyr::relocate(row_n, .before = link) %>% 
  gt() %>% 
  gt::tab_header(
    title = "Creators for Gaza Gofundme Campaign Totals",
    subtitle = paste0("Updated ", lubridate::now())
  ) %>% 
  gt::fmt_image(
    columns = row_n,
    path = paste0(here::here(), "/qr-codes"),
    file_pattern = "{x}.png",
    width = "8em",
    height = "8m"
  ) %>% 
  gt::fmt_url(
    columns = link, 
    label = link_text,
    as_button = TRUE,
    button_fill = "firebrick",
    button_width = px(140),
    button_outline = "black"
  ) %>% 
  gt::tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      columns = link
    )
  ) %>% 
  gt::fmt_currency(
    columns = c(amount_raised_num, money_raised_24_hours, money_raised_last_20),
    currency = from_column(column = "currency_abv"),
    decimals = 2
  ) %>% 
  # gt::fmt_percent(columns = percent_of_goal,
  #                 decimals = 0) %>%
  gtExtras::gt_plt_bar_pct(
    column = percent_of_goal,
    labels = TRUE,
    fill = "pink",
    height = 26,
    width = 100,
    font_style = "bold",
    font_size = "12px",
    decimals = 0,
    label_cutoff = 0.2
  )  %>%
  gt::tab_options(
    container.height = pct(100),
    container.overflow.x = TRUE
  ) %>%   
  gt::cols_label(
    # campaign_title = "Fundraiser",
    total_num_donations = "Number of donations",
    amount_raised_num = "amount raised",
    percent_of_goal = "Percent of goal reached",
    row_n = "QR Code"
  )


```

```{r scratch}
#| eval: false


# most_recent_donations %>% 
#   ndjson::flatten()
# 
# library(jsonlite)
# library(ndjson)
# 
# jsonlite::toJSON(most_recent_donations , auto_unbox = TRUE) %>% jsonlite::prettify() %>% 
#   # dplyr::pull() %>% 
#   ndjson::flatten()
# 
# result <- str_match_all(my_text, paste0("(?s)", start_word, "(.*?)", end_word))
# 
# # Extracted values
# extracted_values <- result[[1]][, 2]
# 
# sample_fund %>% 
#   # xml2::xml_structure()
#   # xml2::xml_find_all(".//li") %>% 
#   html_text() %>% 
#   enframe() %>% 
#   dplyr::mutate(pattern = str_extract_all(value, pattern = 'created_at\\\":\\\".....'))
#   html_elements(css = ".campaign-sidebar_wrapper__Ay4Wk") %>% 
#   html_text()

# 
# 
# sample_fund <- read_html("https://www.gofundme.com/f/help-us-evacuate-and-receive-a-better-education")
# 
# # sample_fund_donation_link <- read_html("https://www.gofundme.com/f/help-zeyad-and-his-family-to-evacuate-gaza?modal=donations&tab=all")
# # 
# # sample_fund_donation_link %>% 
# #   html_elements(css = ".donation-list_donationListItem__EoNQQ") %>% 
# #   html_text()
# 
# 
# # Extract values between start_word and end_word
# most_recent_donations <- sample_fund %>% 
#   html_text() %>% 
#   enframe() %>% 
#   dplyr::mutate(result = 
#                   str_match_all(value, 
#                                 paste0("(?s)",
#                                        start_word, 
#                                        "(.*?)", 
#                                        end_word))) %>% 
#   dplyr::select(result) %>% 
#   unlist()   
# 
# 
# # THIS WORKED (NO more 2 columns after unlisting)
# twenty_most_recent_donations <-  most_recent_donations_unlist[[2]][1] %>% 
#   enframe() %>% 
#   tidyr::separate_longer_delim(value, delim = "donation_id") %>% 
#   dplyr::filter(row_number() != 1) %>% 
#   tidyr::separate(value, c("donation_id", "other"), sep = "amount") %>% 
#   dplyr::mutate(donation_id = readr::parse_number(donation_id)) %>% 
#   tidyr::separate(other, c("amount", "other"), sep = "is_offline") %>% 
#   dplyr::mutate(amount = readr::parse_number(amount)) %>%   
#   tidyr::separate(other, c("name", "other"), sep = "created_at") %>% 
#   dplyr::select(-name) %>% 
#   tidyr::separate(other, c("created_at", "other"), sep = "name") %>%   
#   dplyr::mutate(created_at= readr::parse_datetime(str_sub(created_at, start = 6L, end = -12L))) %>% 
#   tidyr::separate(other, c("name", "other"), sep = "profile_url") %>%   
#   dplyr::mutate(name = str_sub(name, start = 6L, end = -6L)) %>% 
#   dplyr::select(-other) 
# 
# # created_at is at UTC-5 (aka CST)
# 
# # check for the donations within the past 24 hours. get the total amount and number of donations to show for each fun
# twenty_most_recent_donations %>% 
#   dplyr::filter((now(tzone = "UTC") - hours(5)) - hours(24) <= created_at) %>% 
#   dplyr::summarise(
#     num_donations = n(),
#     total_donations = sum(amount)
#   )
# 
# # get the spread from the 20 most recent donations
# twenty_most_recent_donations %>% 
#   # dplyr::filter((now(tzone = "UTC") - hours(5)) - hours(24) <= created_at) %>% 
#   dplyr::summarise(
#     num_donations = n(),
#     total_donations = sum(amount),
#     most_recent_donation = as.Date(max(created_at)),
#     date_of_20th_most_recent_donation = as.Date(min(created_at))
#   )



```


